# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
#add_newline = true

# Change the default prompt format
#format = """
#[╭╴](bold purple)$os $time\
#| $all[╰─](red)$character\
#"""

[character]
success_symbol = '[➜](bold green) '
error_symbol = '[✗](bold red) '
#error_symbol = '[➜](bold red) '
#success_symbol = '[:\)](green)'
#error_symbol = '[:\(](red)'

[aws]
symbol = " "
format = '([\[$symbol($profile)(\($region\))(\[$duration\])\]]($style) )'

[buf]
symbol = " "
format = '([\[$symbol($version)\]]($style) )'

[bun]
format = '([\[$symbol($version)\]]($style) )'

[c]
symbol = " "
format = '([\[$symbol($version(-$name))\]]($style) )'

[cmake]
format = '([\[$symbol($version)\]]($style) )'

[cmd_duration]
min_time = 500
#show_milliseconds = false
#style = 'bold yellow'
#format = 'took [$duration]($style) '
format = '([\[⏱ $duration\]]($style) )'
#disabled = false

[container]
symbol = '⬢ '
#style = 'bold red dimmed'
format = '([\[$symbol($name)\]]($style) )'
#disabled = false

[cobol]
format = '([\[$symbol($version)\]]($style) )'

[conda]
symbol = " "
format = '([\[$symbol($environment)\]]($style) )'

[crystal]
format = '[(\[$symbol($version)\]]($style) )'

[daml]
format = '[(\[$symbol($version)\]]($style) )'

[dart]
symbol = " "
format = '[(\[$symbol($version)\]]($style) )'

[deno]
format = '[(\[$symbol($version)\]]($style))'

[directory]
#home_symbol = '~'
#style = 'bold_cyan'
read_only = " 󰌾"
read_only_style = 'red'
format = '[ $path]($style)[$read_only]($read_only_style) '
truncation_length = 4
truncation_symbol = '…/'
#truncate_to_repo = true
#before_repo_root_style = ''
#repo_root_style = ''
#repo_root_format = '[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) '
#use_os_path_sep = true
#disable = false

[directory.substitutions]
# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
#"Documents" = " "
"Documents" = "📄 "
#"Downloads" = "📥 "
"Downloads" = " "
"Téléchargements" = " "
"Music" = " "
"Musique" = " "
#"Music" = "🎜 "
"Pictures" = " "
"Images" = " "
#"Pictures" = "📷 "
# Keep in mind that the order matters. For example:
# "Important Documents" = "  "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important  " = "  "

[docker_context]
symbol = " "
style = 'blue bold'
format = '([\[$symbol($context)\]]($style) )'
only_with_files = true
detect_extensions = ['Dockerfile','dkr']
detect_files = ['docker-compose.yml', 'docker-compose.yaml', 'Dockerfile']
#detect_folders = []

[dotnet]
format = '([\[$symbol($version)(🎯$tfm)\]]($style) )'

[elixir]
symbol = " "
format = '([\[$symbol($version \(OTP $otp_version\))\]]($style) )'

[elm]
symbol = " "
format = '(\[[$symbol($version)\]]($style) )'

[erlang]
format = '([\[$symbol($version)\]]($style) )'

[fennel]
format = '([\[$symbol($version)\]]($style) )'

[fossil_branch]
symbol = " "
#symbol = '🌱 '
format = '\[[$symbol$branch]($style)\]'

[gcloud]
format = '\[[$symbol$account(@$domain)(\($region\))]($style)\]'

[git_branch]
symbol = " "
format = '\[[$symbol$branch(:$remote_branch)]($style)\]'
always_show_remote = false
#style = 'bold_purple'

[git_commit]
commit_hash_length = 4
format = '\[[\($hash$tag\)]($style)\] '
#tag_symbol = '🔖 '
#tag_disabled = false
#style = 'bold green'

[git_metrics]
added_style = 'bold green'
deleted_style = 'bold red'
only_nonzero_diffs = true
format = '([+$added]($added_style))(/[-$deleted]($deleted_style)) '
disabled = false

[git_state]
rebase = 'REBASING'
merge = 'MERGING'
revert = 'REVERTING'
cherry_pick = '[🍒 PICKING](bold red)'
bisect = 'BISECTING'
am = 'AM'
am_or_rebase = 'AM/REBASE'
style = 'bold yellow'
format = '[\($state( $progress_current of $progress_total)\)]($style) '

[git_status]
conflicted = "  ${count}"
#conflicted = "⚔️${count}"
ahead = '⇡${count}'
#ahead = "💨${count}"
behind = '⇣${count}'
#behind = "🐢${count}"
#diverged = '⇕'
diverged = '⇕⇡${ahead_count}⇣${behind_count}'
#diverged = "🔱 💨${ahead_count} 🐢${behind_count}"
up_to_date = '✓'
untracked = " ${count}"
#untracked = '?${count}'
#untracked = "🛤️ ×${count}"
#stashed = '$${count}'
stashed = " ${count}"
#stashed = "📦 "
modified = " ${count}"
#modified = '!${count}'
#modified = "📝${count}"
staged = " ${count}"
#staged = '[++\($count\)](green)'
#staged = "🗃️ ×${count}"
renamed = " ${count}"
#renamed = '»${count}'
#renamed = "📛 ×${count}"
deleted = "﫧${count}"
#deleted = '✘${count}'
#deleted = "🗑️ ×${count}"
typechanged = ""
style = 'bold red'
# $all_status shortcut for '$conflicted$stashed$deleted$renamed$modified$staged$untracked'
# $ahead_behind displays $diverged, $ahead, $behind or $up_to_date format string based on the current status of the repo.
format = '([\[$all_status$ahead_behind\]]($style))'
ignore_submodules = false

[golang]
symbol = " "
format = '(\[[$symbol($version)]($style)\])'

[gradle]
format = '(\[[$symbol($version)]($style)\])'

[guix_shell]
symbol = " "
format = '\[[$symbol]($style)\]'

[haskell]
symbol = " "
format = '(\[[$symbol($version)]($style)\])'

[haxe]
symbol = " "
format = '(\[[$symbol($version)]($style)\])'

[helm]
symbol = '⎈ '
style = 'bold white'
#version_format = 'v${raw}'
format = '(\[[$symbol($version)]($style)\])'
detect_files = ['helmfile.yaml', 'Chart.yaml']

[hg_branch]
symbol = " "
format = '\[[$symbol$branch]($style)\]'

[hostname]
ssh_symbol = " (bold blue) "
style = 'bold dimmed green'
#ssh_only = true
#trim_at = '.'
#trim_at = '.domain.tld'
#format = '[$ssh_symbol$hostname]($style) in '

[java]
symbol = " "
format = '(\[[$symbol($version)]($style)\])'

[jobs]
symbol = ""
#symbol = '✦ '
#style = 'bold blue'
#number_threshold = 2
#symbol_threshold = 1

[julia]
symbol = " "
format = '(\[[$symbol($version)]($style)\])'

[kotlin]
format = '(\[[$symbol($version)]($style)\])'

[kubernetes]
symbol = '☸ '
style = 'cyan bold'
#context_aliases = {}
#[kubernetes.context_aliases]
#'dev.local.cluster.k8s' = 'dev'
#'.*/openshift-cluster/.*' = 'openshift'
#'gke_.*_(?P<var_cluster>[\w-]+)' = 'gke-$var_cluster'
#user_aliases = {}
#[kubernetes.user_aliases]
#'dev.local.cluster.k8s' = 'dev'
#'root/.*' = 'root'
#detect_extensions = []
#detect_files = ['k8s']
#detect_folders = []
format = '\[[$symbol$context( \($namespace\))]($style)\]'
#format = 'on [⛵ ($user on )($cluster in )$context \($namespace\)](dimmed green) '
disabled = false

[localip]
#style = 'bold yellow'
#ssh_only = true
#format = '[$localipv4]($style) '
#format = '@[$localipv4](bold red) '
disabled = false

[lua]
symbol = " "
format = '(\[[$symbol($version)]($style)\])'

[memory_usage]
symbol = "󰍛 "
#style = 'bold dimmed white'
#format = '\[$symbol[$ram(|$swap)]($style)\]'
format = '\[$symbol[$ram_pct(|$swap_pct)]($style)\]'
threshold = -1
disabled = false

[meson]
symbol = "󰔷 "
format = '\[[$symbol$project]($style)\]'

[nim]
symbol = "󰆥 "
format = '(\[[$symbol($version)]($style)\])'

[nix_shell]
symbol = " "
format = '\[[$symbol$state( \($name\))]($style)\]'

[nodejs]
symbol = " "
format = '(\[[$symbol($version)]($style)\])'

[ocaml]
format = '(\[[$symbol($version)(\($switch_indicator$switch_name\))]($style)\])'

[opa]
format = '(\[[$symbol($version)]($style)\])'

[openstack]
format = '\[[$symbol$cloud(\($project\))]($style)\]'

[os]
style = "bold white"
format = '[$symbol]($style)'
disabled = false

[os.symbols]
Alpaquita = " "
Alpine = " "
Amazon = " "
Android = " "
Arch = " "
Artix = " "
CentOS = " "
Debian = " "
DragonFly = " "
Emscripten = " "
EndeavourOS = " "
Fedora = " "
FreeBSD = " "
Garuda = "󰛓 "
Gentoo = " "
HardenedBSD = "󰞌 "
Illumos = "󰈸 "
#Kali = "㉿"
#Linux = " "
Linux = "㉿"
Mabox = " "
Macos = " "
Manjaro = " "
Mariner = " "
MidnightBSD = " "
Mint = " "
NetBSD = " "
NixOS = " "
OpenBSD = "󰈺 "
openSUSE = " "
OracleLinux = "󰌷 "
Pop = " "
Raspbian = " "
Redhat = " "
RedHatEnterprise = " "
Redox = "󰀘 "
Solus = "󰠳 "
SUSE = " "
Ubuntu = " "
Unknown = " "
Windows = "󰍲 "

[package]
symbol = "󰏗 "
format = '(\[[$symbol$version]($style)\] )'

[perl]
format = '(\[[$symbol($version)]($style)\])'

[php]
format = '(\[[$symbol($version)]($style)\])'

[pijul_channel]
symbol = " "
format = '\[[$symbol$channel]($style)\]'

[pulumi]
format = '\[[$symbol$stack]($style)\]'

[purescript]
format = '(\[[$symbol($version)]($style)\])'

[python]
symbol = " "
format = '(\[[${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style)\])'

[raku]
format = '(\[[$symbol($version-$vm_version)]($style)\])'

[red]
format = '(\[[$symbol($version)]($style)\])'

[rlang]
symbol = "󰟔 "
format = '([$symbol($version )]($style))'

[ruby]
symbol = " "
format = '(\[[$symbol($version)]($style)\])'

[rust]
symbol = " "
format = '(\[[$symbol($version)]($style)\])'

[scala]
symbol = " "
format = '(\[[$symbol($version)]($style)\])'

[spack]
format = '\[[$symbol$environment]($style)\]'

[sudo]
format = '\[[as $symbol]($style)\]'

[swift]
format = '(\[[$symbol($version)]($style)\])'

[terraform]
format = '\[[$symbol$workspace]($style)\]'

[time]
format = '\[[$time]($style)\]'

[username]
format = '\[[$user]($style)\]'

[vagrant]
format = '(\[[$symbol($version)]($style)\])'

[vlang]
format = '(\[[$symbol($version)]($style)\])'

[zig]
format = '(\[[$symbol($version)]($style)\])'

[solidity]
format = '\[[$symbol($version)]($style)\]'

