{{ if eq .chezmoi.os "linux" -}}
#!/usr/bin/env bash
# shellcheck disable=SC1054,SC1083
# Add `config.toml` hash to get the script run when main config is updated
# config.toml hash: \{\{ include "dot_config/mise/config.toml" | sha256sum \}\}"

set -ueo pipefail
IFS=$'\n\t'

# Raise limit for the max number of openfiles
ulimit -n 20480
# Make it permanent
# https://www.baeldung.com/linux/error-too-many-open-files
# https://www.tecmint.com/increase-set-open-file-limits-in-linux/
sudo bash -c "echo '* soft nofile 20480' > /etc/security/limits.d/ulimit.conf"
sudo bash -c "echo '* hard nofile 40960' >> /etc/security/limits.d/ulimit.conf"

export HOMEBREW_BREWFILE="$HOME/.local/share/chezmoi/dot_config/brewfile/Brewfile"
export HOMEBREW_BREWFILE_BACKUP="$HOME/.config/brewfile/Brewfile.backup" # Set brew-file backup file name
export HOMEBREW_BREWFILE_FULL_NAME=1 # Toggle use of full names (tap/name)
export HOMEBREW_BREWFILE_LEAVES=0 # Only list leaves
export HOMEBREW_BREWFILE_ON_REQUEST=1 # Only list packages installed on request. Has priority over leaves
export HOMEBREW_BREWFILE_TOP_PACKAGES="gcc" # "go,coreutils" # Packages always to be listed
#export NONINTERACTIVE=1
export HOMEBREW_AUTO_UPDATE_SECS=3600
export HOMEBREW_NO_AUTO_UPDATE= # 1 to enable, empty to disable
export HOMEBREW_NO_ENV_HINTS= # 1 to enable, empty to disable
export HOMEBREW_NO_INSTALL_CLEANUP= # 1 to enable, empty to disable

[ -x /home/linuxbrew/.linuxbrew/bin/brew ] || \
  bash -c "$(curl -fsSL https://raw.github.com/rcmdnk/homebrew-file/install/install.sh)"
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

if [ -f "$(brew --prefix)/etc/brew-wrap" ];then
  # shellcheck disable=SC1091
  source "$(brew --prefix)/etc/brew-wrap"
fi

# config.toml hash: {{ include "dot_config/brewfile/Brewfile" | sha256sum }}
brew file install
brew file clean -V warning

## Initialize `rustup` and set a default toolchain:
# If you have `rust` installed, ensure you have "$(brew --prefix rustup)/bin"
# before "$(brew --prefix)/bin" in your $PATH:
# https://rust-lang.github.io/rustup/installation/already-installed-rust.html
# rustup is keg-only, which means it was not symlinked into /home/linuxbrew/.linuxbrew,
# because it conflicts with rust.
rustup default stable


#mise plugins install --all --yes
#
#mise install
#
#for SH in bash zsh fish; do
#    mise activate --shell "$SH" > ~/.config/"$SH"/conf.d/mise."$SH"
#    mise complete --shell "$SH" > ~/.config/"$SH"/completions/mise."$SH"
#done
#
#mkdir -p ~/.config/direnv/lib
#mise direnv > ~/.config/direnv/lib/use_mise.sh
#ln -snf ~/.config/direnv/lib/use_mise.sh ~/.config/direnv/lib/use_rtx.sh
#
#mise plugins install --force \
#    pdm \
#    php \
#    pnpm

# config.toml hash: {{ include "dot_config/pipx/packages.json" | sha256sum }}"
# https://github.com/pypa/pipx/issues/359
# https://github.com/br3ndonland/dotfiles/commit/b133fb84e85cff7989ffd657248618a8edafdf1e
pipx install-all "$HOME/.local/share/chezmoi/dot_config/pipx/packages.json"

$(gh auth status &> /dev/null) || gh auth login
gh extension install github/gh-copilot

# shellcheck disable=SC1009,SC1072,SC1073,SC1054,SC1083
{{ else if eq .chezmoi.os "darwin" -}}
#!/bin/sh

{{ end -}}

